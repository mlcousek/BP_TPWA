@model IEnumerable<BP_TPWA.Models.TreninkoveData>

@{
    ViewData["Title"] = "Index";
}

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<h1>Přehled odcvičených dat</h1>
<p class="pridejData">Zatím jsi nezapsal žádné data!</p>



<div id="buttons"></div> <!-- Kontejner pro tlačítka -->
<div id="tlacitka"></div>
<div id="info"></div>


<div id="charts"></div> <!-- Kontejner pro grafy -->
<div id="chartswsum"></div> <!-- Kontejner pro grafy -->

<style>
    .btn-spacing {
        margin-right: 1em; /* Pravá mezera mezi tlačítky */
        margin-bottom: 1em;
    }
</style>

<script>
    var treninkovedata = @Html.Raw(Json.Serialize(ViewBag.treninkovedata));
    var tpdata = @Html.Raw(Json.Serialize(ViewBag.tpdata));
    console.log(treninkovedata);
    console.log(tpdata);

    if (treninkovedata.length !== 0) {
        document.querySelector('.pridejData').style.display = 'none'
    
        var grafy;

        if (tpdata[0].stylTP === "VM" && tpdata[0].druhTP === "BSH") {
            var bshvmnohyData = filterDataPodleTypuTreninku(treninkovedata, 'BSHVMNohy');
            var bshvmramenaData = filterDataPodleTypuTreninku(treninkovedata, 'BSHVMRamBic');
            var bshvmhrudnikData = filterDataPodleTypuTreninku(treninkovedata, 'BSHVMHrTric');
            var bshvmzadaData = filterDataPodleTypuTreninku(treninkovedata, 'BSHVMZada');
            grafy = { bshvmnohyData, bshvmramenaData, bshvmhrudnikData, bshvmzadaData };
        }

        function filterDataPodleTypuTreninku(data, typTreninku) {
            return data.filter(entry => entry.cvik.typyTreninku.includes(typTreninku));
        }

        Object.keys(grafy).forEach(function (kategorie) {
            var dataKategorie = grafy[kategorie];

            // Seskupení dat podle cviku
            var groupedByExercise = {};
            dataKategorie.forEach(function (cvikData) {
                var cvikName = cvikData.cvik.název;
                if (!groupedByExercise[cvikName]) {
                    groupedByExercise[cvikName] = [];
                }
                groupedByExercise[cvikName].push(cvikData);
            });
 
            // Vytvoření grafu pro každý cvik
            Object.keys(groupedByExercise).forEach(function (cvikName) {
                var cvikDataForExercise = groupedByExercise[cvikName];

                // Vytvoření kontejneru pro každý graf
                var chartContainer = document.createElement('div');
                var chartContainerwsum = document.createElement('div');
                var infoContainer = document.createElement('div');

                chartContainer.classList.add('chart-container');
                chartContainerwsum.classList.add('chart-containerwsum');
                infoContainer.classList.add('info-container');

                document.getElementById('charts').appendChild(chartContainer);
                document.getElementById('chartswsum').appendChild(chartContainerwsum);
                document.getElementById('info').appendChild(infoContainer);

                var adjustedData = {};
                cvikDataForExercise.forEach(function (cvikData) {
                    var datum = cvikData.datum;
                    var cvicenaVaha = cvikData.cvicenaVaha;
                    var pocetOpakovani = cvikData.pocetOpakovani;
                    var aktualniVahaUzivatele = cvikData.vahaUzivatele;
                    chartContainer.id = cvikData.cvikId;
                    chartContainerwsum.id = cvikData.cvikId + 'wsum';
                    infoContainer.id = cvikData.cvikId + 'info';

                    if (!adjustedData[datum]) {
                        adjustedData[datum] = { maxVaha: cvicenaVaha, sumaVah: cvicenaVaha * pocetOpakovani, pocetSérií: 1, pocetOpakovani: pocetOpakovani, vahaUzivatele: aktualniVahaUzivatele };
                    } else {
                        adjustedData[datum].maxVaha = Math.max(adjustedData[datum].maxVaha, cvicenaVaha);
                        adjustedData[datum].sumaVah += cvicenaVaha * pocetOpakovani;
                        adjustedData[datum].pocetSérií++;
                        adjustedData[datum].pocetOpakovani += pocetOpakovani;
                    }
                });

                // Vytvoření pole dat pro graf
                var dates = Object.keys(adjustedData);
                var maxVahy = dates.map(date => adjustedData[date].maxVaha);
                var prumVahy = dates.map(date => adjustedData[date].sumaVah / adjustedData[date].pocetOpakovani);
                var sumaVah = dates.map(date => adjustedData[date].sumaVah);
                var vahyUzivatele = dates.map(date => adjustedData[date].vahaUzivatele);

                //Data do souhrnu
                var maximalniVaha = Math.max(...maxVahy);
                var indexMaxVaha = maxVahy.indexOf(maximalniVaha);
                var vahaUzivatelePriMaxVaze = vahyUzivatele[indexMaxVaha];
                var datumMaximalniVahy = dates[indexMaxVaha];
                datumMaximalniVahy = datumMaximalniVahy.slice(0, 10);

                var nejvetsiVahaZaTrenink = Math.max(...sumaVah);
                var indexMaxVahaZaTrenink = sumaVah.indexOf(nejvetsiVahaZaTrenink);
                var vahaUzivatelePriMaxVazeZaTrenink = vahyUzivatele[indexMaxVahaZaTrenink];
                var datumMaxVahyZaTrenink = dates[indexMaxVaha];
                datumMaxVahyZaTrenink = datumMaxVahyZaTrenink.slice(0, 10);

                var prumernaVaha = (prumVahy.reduce((acc, val) => acc + val, 0) / prumVahy.length).toFixed(2);
                var sumaVsechVah = sumaVah.reduce((acc, val) => acc + val, 0);

            
                // Vytvoření HTML obsahu informačního kontejneru s přidanými daty
                infoContainer.innerHTML = `
                    <p>Nejvyšší cvičená váha: ${maximalniVaha}kg (Tělesná váha: ${vahaUzivatelePriMaxVaze}kg, Datum: ${datumMaximalniVahy})</p>
                    <p>Celková nejvyšší nazvedaná váha za trénink: ${nejvetsiVahaZaTrenink}kg (Tělesná váha: ${vahaUzivatelePriMaxVazeZaTrenink}kg, Datum: ${datumMaxVahyZaTrenink})</p>
                    <p>Průměrná váha ze všech tréninků: ${prumernaVaha}kg</p>
                    <p>Celková nazvedaná váha na tento cvik: ${sumaVsechVah}kg</p>
                `;

                for (var i = 0; i < dates.length; i++) {
                    dates[i] = dates[i].slice(0, 10);
                }

                // Vytvoření grafu pro každý cvik
                var canvas = document.createElement('canvas');
                var canvaswsum = document.createElement('canvas');
                chartContainer.appendChild(canvas);
                chartContainerwsum.appendChild(canvaswsum);
                var ctxwsum = canvaswsum.getContext('2d');
                var ctx = canvas.getContext('2d');
                var myChart = new Chart(ctx, {
                    type: 'line',
                    data: {
                        labels: dates,
                        datasets: [{
                            label: 'Nejvyšší váha (kg)',
                            data: maxVahy,
                            backgroundColor: 'rgba(255, 99, 132, 0.2)',
                            borderColor: 'rgba(255, 99, 132, 1)',
                            borderWidth: 1
                        }, {
                            label: 'Průměrná váha (kg)',
                            data: prumVahy,
                            backgroundColor: 'rgba(54, 162, 235, 0.2)',
                            borderColor: 'rgba(54, 162, 235, 1)',
                            borderWidth: 1
                        }, {
                            label: 'Aktuální váha uživatele (kg)',
                            data: vahyUzivatele, 
                            backgroundColor: 'rgba(255, 206, 86, 0.2)',
                            borderColor: 'rgba(255, 206, 86, 1)',
                            borderWidth: 1
                        }]
                    },
                    options: {
                        scales: {
                            y: {
                                beginAtZero: true
                            }
                        },
                        plugins: {
                            title: {
                                display: true,
                                text: cvikName 
                            }
                        }
                    }
                });
                var myChart1 = new Chart(ctxwsum, {
                    type: 'line',
                    data: {
                        labels: dates,
                        datasets: [{
                            label: 'Nejvyšší váha (kg)',
                            data: maxVahy,
                            backgroundColor: 'rgba(255, 99, 132, 0.2)',
                            borderColor: 'rgba(255, 99, 132, 1)',
                            borderWidth: 1
                        }, {
                            label: 'Průměrná váha (kg)',
                            data: prumVahy,
                            backgroundColor: 'rgba(54, 162, 235, 0.2)',
                            borderColor: 'rgba(54, 162, 235, 1)',
                            borderWidth: 1
                        }, {
                            label: 'Aktuální váha uživatele (kg)',
                            data: vahyUzivatele,
                            backgroundColor: 'rgba(255, 206, 86, 0.2)',
                            borderColor: 'rgba(255, 206, 86, 1)',
                            borderWidth: 1
                        }, {
                            label: 'Součet nazvedaných vah (kg)',
                            data: sumaVah,
                            backgroundColor: 'rgba(0, 0, 0, 0.2)',
                            borderColor: 'rgba(0, 0, 0, 1)',
                            borderWidth: 1
                        }]
                    },
                    options: {
                        scales: {
                            y: {
                                beginAtZero: true
                            }
                        },
                        plugins: {
                            title: {
                                display: true,
                                text: cvikName 
                            }
                        }
                    }
                });
            });
        });

        var existingContainer = document.getElementById('tlacitka');

        //vytvoření tech divu
        Object.keys(grafy).forEach(function (kategorie) {
            //var containerId = 'buttons' + index; // Vytvoření id pro každý kontejner
            var container = document.createElement('div');
            container.id = tlacitkoText(kategorie) + 'butt';

            existingContainer.appendChild(container);
        });


        // Vytvoření tlačítek pro každý prvek v objektu grafy
        Object.keys(grafy).forEach(function (kategorie) {
            var button = document.createElement('button');
            button.id = tlacitkoText(kategorie);
            button.textContent = tlacitkoText(kategorie);
            button.classList.add('btn', 'btn-dark', 'btn-spacing');
            button.addEventListener('click', function () {
                // Zde můžete přidat kód pro zobrazení příslušného grafu
                var kliknuteTlacitkoId = this.id;
                Object.keys(grafy).forEach(function (kategorie) {
                    var containerId = tlacitkoText(kategorie) + 'butt';
                    var container = document.getElementById(containerId);
                    if (container && kliknuteTlacitkoId === tlacitkoText(kategorie)) {
                        container.style.display = 'block';
                    } else if (container) {
                        container.style.display = 'none';
                    }
                });
                //idtlacitka nak tere kliknul 
            });
            document.getElementById('buttons').appendChild(button);
        });

        function tlacitkoText(kategorie) {
            if (kategorie === "bshvmnohyData") {
                return "Nohy";
            } else if (kategorie === "bshvmramenaData") {
                return "Ramena + biceps";
            } else if (kategorie === "bshvmhrudnikData") {
                return "Hrudník + triceps";
            } else if (kategorie === "bshvmzadaData") {
                return "Záda";
            }
            return " ";
        }

        var i = 0;
        //var uniqueCviky = []; // Pole pro uchování unikátních cviků

        Object.keys(grafy).forEach(function (kategorie) {
            var uniqueCviky = [];
            Object.keys(grafy[kategorie]).forEach(function (cvik) {
                var nazevCviku = grafy[kategorie][cvik].cvik.název;
                var idCviku = grafy[kategorie][cvik].cvikId;

                // Zkontrolovat, zda cvik již není v poli uniqueCviky
                if (!uniqueCviky.includes(nazevCviku)) {
                    uniqueCviky.push(nazevCviku); // Přidat cvik do pole unikátních cviků

                    var button = document.createElement('button');
                    button.id = tlacitkoText(kategorie);
                    button.textContent = nazevCviku;
                    button.classList.add('btn', 'btn-light', 'btn-spacing');
                    button.addEventListener('click', function () {
                        // Zde můžete přidat kód pro zobrazení příslušného grafu
                        console.log('Graf pro cvik: ' + nazevCviku + ' a id:' + idCviku);
                        var chartsDiv1 = document.getElementById('charts');
                        var chartsDivwsum1 = document.getElementById('chartswsum');
                        var infoDiv1 = document.getElementById('info');

                        // Najděte všechny prvky s třídou 'chart-container' v rámci <div id="charts">
                        var chartContainers1 = chartsDiv1.getElementsByClassName('chart-container');
                        var chartContainerswsum1 = chartsDivwsum1.getElementsByClassName('chart-containerwsum');
                        var infoContainers1 = infoDiv1.getElementsByClassName('info-container');

                        // Projděte všechny nalezené prvky a nastavte jejich styl display na 'none'
                        for (var i = 0; i < chartContainers.length; i++) {
                            chartContainers1[i].style.display = 'none';
                            chartContainerswsum1[i].style.display = 'none';
                            infoContainers1[i].style.display = 'none';
                        }
                        var graf = document.getElementById(idCviku);
                        var grafwsum = document.getElementById(idCviku + 'wsum');
                        var info = document.getElementById(idCviku + 'info');
                        graf.style.display = 'block';
                        grafwsum.style.display = 'block';
                        info.style.display = 'block';


                    });
                    document.getElementById(tlacitkoText(kategorie) + 'butt').appendChild(button);
                }
            });
            i++;
        });

        Object.keys(grafy).forEach(function (kategorie) {
            var containerId = tlacitkoText(kategorie) + 'butt';
            var container = document.getElementById(containerId);
            if (container) {
                container.style.display = 'none';
            }
        });

        // Najděte element <div id="charts">
        var chartsDiv = document.getElementById('charts');
        var chartsDivwsum = document.getElementById('chartswsum');
        var infoDiv = document.getElementById('info');

        // Najděte všechny prvky s třídou 'chart-container' v rámci <div id="charts">
        var chartContainers = chartsDiv.getElementsByClassName('chart-container');
        var chartContainerswsum = chartsDivwsum.getElementsByClassName('chart-containerwsum');
        var infoContainers = infoDiv.getElementsByClassName('info-container');

        // Projděte všechny nalezené prvky a nastavte jejich styl display na 'none'
        for (var i = 0; i < chartContainers.length; i++) {
            chartContainers[i].style.display = 'none';
            chartContainerswsum[i].style.display = 'none';
            infoContainers[i].style.display = 'none';
        }
    }

</script>
